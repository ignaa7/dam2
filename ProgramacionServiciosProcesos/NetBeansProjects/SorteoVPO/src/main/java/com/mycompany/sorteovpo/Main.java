/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.sorteovpo;

import Excepciones.NotNullDNI;
import POJOs.Casa;
import POJOs.Ganador;
import POJOs.Organizacion;
import POJOs.Persona;
import POJOs.Piso;
import POJOs.TipoPersona;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ignac
 */
public class Main extends javax.swing.JFrame {
    
    List<Object> aspirantes = new ArrayList<>();
    List<Object> viviendas = new ArrayList<>();
    
    List<Ganador> ganadores = new ArrayList<>();

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        
        llenarListas();
    }
    
    private void llenarListas() {
        try {
            aspirantes.add(new Persona("11111111A", "Pepe", TipoPersona.CON_HIJOS));
            aspirantes.add(new Persona("22222222B", "Paca", TipoPersona.SIN_HIJOS));
            aspirantes.add(new Persona("33333333C", "Laura", TipoPersona.MINUSVALIDO));
            aspirantes.add(new Organizacion("La granja", "11111111"));
            aspirantes.add(new Organizacion("Barriada España", "22222222"));
            aspirantes.add(new Organizacion("El Pelirón", "33333333"));

            viviendas.add(new Piso(1, "Calle A"));
            viviendas.add(new Piso(2, "Calle B"));
            viviendas.add(new Piso(3, "Calle C"));
            viviendas.add(new Casa(1, "Calle A"));
            viviendas.add(new Casa(2, "Calle B"));
            viviendas.add(new Casa(3, "Calle C"));
            
        } catch (NotNullDNI e) {
            lblError.setText(e.getMessage());
        } catch (NullPointerException e) {
            lblError.setText("Se produjo una NullPointerException.");
        }
    }
    
    private void cargarTabla()
	{
        DefaultTableModel modelo=new DefaultTableModel();	 
	 
	 modelo.addColumn("Nombre propietario");
         modelo.addColumn("DNI/NIF propietario");
         modelo.addColumn("Tipo propietario");

	 modelo.addColumn("Número registro vivienda");
         modelo.addColumn("Dirección vivienda");

	
    
   
	 Object[] registroLeido = new Object [5];
	 
	 for(Ganador ganador: ganadores)

	 {	 
            Object propietario = ganador.getPropietario();
            Object vivienda = ganador.getVivienda();
            
            if (propietario instanceof Persona) {
                Persona persona = (Persona)propietario;
                registroLeido[0]= persona.getNombre();
                registroLeido[1]= persona.getDni();
                registroLeido[2]= persona.getTipo();
            } else {
                Organizacion organizacion = (Organizacion)propietario;
                registroLeido[0]= organizacion.getNombre();
                registroLeido[1]= organizacion.getNif();
                registroLeido[2]= "";
            }
            
            if (vivienda instanceof Casa) {
                Casa casa = (Casa)vivienda;
                registroLeido[3]= casa.getNumeroRegistro();
                registroLeido[4]= casa.getDireccion();
            } else {
                Piso piso = (Piso)vivienda;
                registroLeido[3]= piso.getNumeroRegistro();
                registroLeido[4]= piso.getDireccion();
            }
            
            modelo.addRow(registroLeido);

	 }
	 
	 tablaGanadores.setModel(modelo);
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRealizarSorteo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaGanadores = new javax.swing.JTable();
        lblError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRealizarSorteo.setText("Realizar sorteo");
        btnRealizarSorteo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                realizarSorteo(evt);
            }
        });

        tablaGanadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaGanadores);

        lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addComponent(btnRealizarSorteo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(btnRealizarSorteo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void realizarSorteo(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_realizarSorteo
        try {
            int numeroGanador = (int) (Math.random() * aspirantes.size());
            int numeroVivienda = (int) (Math.random() * viviendas.size());
        
            ganadores.add(new Ganador(viviendas.get(numeroVivienda), aspirantes.get(numeroGanador)));
        
            cargarTabla();
        } catch (NullPointerException e) {
            lblError.setText("Se produjo una NullPointerException.");
        }
    }//GEN-LAST:event_realizarSorteo

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRealizarSorteo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblError;
    private javax.swing.JTable tablaGanadores;
    // End of variables declaration//GEN-END:variables
}
